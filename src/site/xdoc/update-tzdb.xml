<?xml version="1.0"?>

<document>

 <properties>
  <title>ThreeTen Backport</title>
  <author>Stephen Colebourne</author>
 </properties>

 <body>

<section name="Update tzdb">
<p>
ThreeTen-Backport contains a set of time-zone information independent of the JDK.
This can be updated when time-zone rules change.
There are two ways to update the data.
</p>
</section>


<section name="Build separate tzdb.jar">
<p>
The first option is to build a standalone tzdb file.
The generated jar file is added to the classpath in addition to the standard threetenbp.jar file.
<ol>
<li>Clone the <a href="https://github.com/ThreeTen/threetenbp">source repository</a> from GitHub</li>
<li><a href="http://www.iana.org/time-zones">Download</a> the latest tzdb from IANA</li>
<li>Unpack the files in the tar.gz to the folder <code>src/tzdb/{tzdb-version}</code> inside the cloned source</li>
<li>Run the maven command <code>mvn clean package -Dtzdb-jar</code></li>
<li>Add the resulting tzdb-{version}.jar file in the <code>target</code> folder to your classpath
(ignore the tadb-all.jar file)</li>
</ol>
</p>
<p>
This is the preferred approach as it separates the tzdb data from released code.
</p>
</section>


<section name="Rebuild threetenbp.jar">
<p>
The second option is to rebuild the main threetenbp.jar file.
The generated jar file will replace the standard threetenbp.jar file.
<ol>
<li>Clone the <a href="https://github.com/ThreeTen/threetenbp">source repository</a> from GitHub</li>
<li><a href="http://www.iana.org/time-zones">Download</a> the latest tzdb from IANA</li>
<li>Unpack the files in the tar.gz to the folder <code>src/tzdb/{tzdb-version}</code> inside the cloned source</li>
<li>Change the version number in the maven pom to indicate it is your unoffical build</li>
<li>Run the maven command <code>mvn clean compile</code></li>
<li>Run the maven command <code>mvn package -Dtzdb-update</code></li>
<li>Use the resulting threetenbp.jar file in the <code>target</code> folder</li>
</ol>
</p>
</section>


</body>
</document>
