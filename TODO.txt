/*
 * Copyright (c) 2007-2009, Stephen Colebourne & Michael Nascimento Santos
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *  * Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 *  * Neither the name of JSR-310 nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

MathUtils
- can't be public, can't put in java.math as we require JDK5 support

Duration

Instant
- review in line with changes to Duration
- parse factory
- time-scales

Date/Time classes
- factories from Calendrical... ?
- parse factories
- getChronology()

Date/Time fields
- isJanuary()
- isMonday()
- parse factories

Date/Time formatting
- format patterns - yyyy-MM-dd
- strict/lenient parse
- upper/lower case
- substitute text (replacing built in text for Months/DOW etc)
- only ASCII numbers
- parse zone
- parse optional needs to store and drop back Calendrical properly
- parse API is too complex to parse Date/Time due to merge
- Arabic numbers have negative sign after number
- parseInto(Calendrical)
- default calendrical to pre-define era for example

Time zones
- public access to transitions and transition rules?
- OffsetInfo, discontinuity rename to transition
- zone rule where time of day is 24:00
- SPI and zone providers
- versions of zone data files

Periods
- toDays() etc, if we keep those classes
- construct fields without period units (what does this mean?)
- formatting (defer? but need parse factory)

Intervals
- intervals (defer completely?)

Time scales
- time scales (minimum?)

Matchers/Adjusters
- DateTimeMatcher
- DateTimeAdjuster

Calendars
- period units in chronologies?
- GJCalendar
- more calendar systems

General
- test separable comparators for providers
- Year.of() Duration.of() plus big static class?
- first day of week
- get month/weekday text
- get rule by name
- get chrono by name
- create formatter using SimpleDateFormat type string
- OffsetDateTime.fromEpochSeconds()

Possible items
- Rename DateProvider to LocalDateProvider?
- roll()
- round()
- iteration

DONE
- getYearMonth(), getMonthDay()
- withXxx() taking Year, MonthOfYear - with(Adjuster)
- zone prev/next transition

